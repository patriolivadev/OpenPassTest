// Mocks generated by Mockito 5.4.4 from annotations
// in open_pass_test_oliva_patricio/test/features/character/domain/use_cases/remove_favorite_character_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core_encode/core_encode.dart' as _i7;
import 'package:dartz/dartz.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:open_pass_test_oliva_patricio/core/entities/filter.dart' as _i9;
import 'package:open_pass_test_oliva_patricio/features/character/data/data_sources/character_local_data_source.dart'
    as _i3;
import 'package:open_pass_test_oliva_patricio/features/character/data/data_sources/character_remote_data_source.dart'
    as _i2;
import 'package:open_pass_test_oliva_patricio/features/character/domain/entities/character.dart'
    as _i10;
import 'package:open_pass_test_oliva_patricio/features/character/domain/entities/characters_response.dart'
    as _i8;
import 'package:open_pass_test_oliva_patricio/features/character/domain/repositories/character_repository_base.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCharacterRemoteDataSourceBase_0 extends _i1.SmartFake
    implements _i2.CharacterRemoteDataSourceBase {
  _FakeCharacterRemoteDataSourceBase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCharacterLocalDataSourceBase_1 extends _i1.SmartFake
    implements _i3.CharacterLocalDataSourceBase {
  _FakeCharacterLocalDataSourceBase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CharacterRepositoryBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRepositoryBase extends _i1.Mock
    implements _i5.CharacterRepositoryBase {
  MockCharacterRepositoryBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CharacterRemoteDataSourceBase get remote => (super.noSuchMethod(
        Invocation.getter(#remote),
        returnValue: _FakeCharacterRemoteDataSourceBase_0(
          this,
          Invocation.getter(#remote),
        ),
      ) as _i2.CharacterRemoteDataSourceBase);

  @override
  _i3.CharacterLocalDataSourceBase get local => (super.noSuchMethod(
        Invocation.getter(#local),
        returnValue: _FakeCharacterLocalDataSourceBase_1(
          this,
          Invocation.getter(#local),
        ),
      ) as _i3.CharacterLocalDataSourceBase);

  @override
  _i6.Future<_i4.Either<_i7.Failure, _i8.CharactersResponse>> getCharacters(
          _i9.Filter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [filter],
        ),
        returnValue:
            _i6.Future<_i4.Either<_i7.Failure, _i8.CharactersResponse>>.value(
                _FakeEither_2<_i7.Failure, _i8.CharactersResponse>(
          this,
          Invocation.method(
            #getCharacters,
            [filter],
          ),
        )),
      ) as _i6.Future<_i4.Either<_i7.Failure, _i8.CharactersResponse>>);

  @override
  _i6.Future<_i4.Either<_i7.Failure, List<_i10.Character>>>
      getFavoriteCharacters() => (super.noSuchMethod(
            Invocation.method(
              #getFavoriteCharacters,
              [],
            ),
            returnValue:
                _i6.Future<_i4.Either<_i7.Failure, List<_i10.Character>>>.value(
                    _FakeEither_2<_i7.Failure, List<_i10.Character>>(
              this,
              Invocation.method(
                #getFavoriteCharacters,
                [],
              ),
            )),
          ) as _i6.Future<_i4.Either<_i7.Failure, List<_i10.Character>>>);

  @override
  _i6.Future<_i4.Either<_i7.Failure, int>> saveFavoriteCharacter(
          _i10.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavoriteCharacter,
          [character],
        ),
        returnValue: _i6.Future<_i4.Either<_i7.Failure, int>>.value(
            _FakeEither_2<_i7.Failure, int>(
          this,
          Invocation.method(
            #saveFavoriteCharacter,
            [character],
          ),
        )),
      ) as _i6.Future<_i4.Either<_i7.Failure, int>>);

  @override
  _i6.Future<_i4.Either<_i7.Failure, int>> removeCharacterIntent(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCharacterIntent,
          [id],
        ),
        returnValue: _i6.Future<_i4.Either<_i7.Failure, int>>.value(
            _FakeEither_2<_i7.Failure, int>(
          this,
          Invocation.method(
            #removeCharacterIntent,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.Either<_i7.Failure, int>>);
}
