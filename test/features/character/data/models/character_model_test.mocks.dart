// Mocks generated by Mockito 5.4.4 from annotations
// in open_pass_test_oliva_patricio/test/features/character/data/models/character_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:open_pass_test_oliva_patricio/features/character/data/data_sources/character_local_data_source.dart'
    as _i2;
import 'package:open_pass_test_oliva_patricio/features/character/domain/entities/character.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CharacterLocalDataSourceBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterLocalDataSourceBase extends _i1.Mock
    implements _i2.CharacterLocalDataSourceBase {
  MockCharacterLocalDataSourceBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveCharacter(_i4.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCharacter,
          [character],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeCharacter(int? characterId) => (super.noSuchMethod(
        Invocation.method(
          #removeCharacter,
          [characterId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isCharacterSaved(int? characterId) => (super.noSuchMethod(
        Invocation.method(
          #isCharacterSaved,
          [characterId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.Character>> getAllCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getAllCharacters,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Character>>.value(<_i4.Character>[]),
      ) as _i3.Future<List<_i4.Character>>);
}
