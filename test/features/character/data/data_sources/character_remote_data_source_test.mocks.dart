// Mocks generated by Mockito 5.4.4 from annotations
// in open_pass_test_oliva_patricio/test/features/character/data/data_sources/character_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:open_pass_test_oliva_patricio/core/services/http_service.dart'
    as _i3;
import 'package:open_pass_test_oliva_patricio/features/character/data/data_sources/character_local_data_source.dart'
    as _i5;
import 'package:open_pass_test_oliva_patricio/features/character/domain/entities/character.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpServiceBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpServiceBase extends _i1.Mock implements _i3.HttpServiceBase {
  MockHttpServiceBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get http => (super.noSuchMethod(
        Invocation.getter(#http),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#http),
        ),
      ) as _i2.Client);

  @override
  _i4.Future<dynamic> get(String? url) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [CharacterLocalDataSourceBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterLocalDataSourceBase extends _i1.Mock
    implements _i5.CharacterLocalDataSourceBase {
  MockCharacterLocalDataSourceBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveCharacter(_i6.Character? character) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCharacter,
          [character],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeCharacter(int? characterId) => (super.noSuchMethod(
        Invocation.method(
          #removeCharacter,
          [characterId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCharacterSaved(int? characterId) => (super.noSuchMethod(
        Invocation.method(
          #isCharacterSaved,
          [characterId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i6.Character>> getAllCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getAllCharacters,
          [],
        ),
        returnValue: _i4.Future<List<_i6.Character>>.value(<_i6.Character>[]),
      ) as _i4.Future<List<_i6.Character>>);
}
